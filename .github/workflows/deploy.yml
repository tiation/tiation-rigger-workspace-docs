name: 🚀 Deploy Documentation Site

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC to check for broken links
    - cron: '0 2 * * *'

jobs:
  quality-checks:
    name: 🔍 Quality Assurance
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        npm ci
        npm audit --audit-level=moderate
        
    - name: 🔍 Code quality checks
      run: |
        npm run lint:check
        npm run format:check
        
    - name: 📋 Test documentation links
      run: |
        npm run test:links
        
    - name: 🔒 Security audit
      run: |
        npm run security
        
    - name: 📊 Generate build report
      run: |
        npm run build
        
    - name: 📈 Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts-${{ matrix.node-version }}
        path: |
          assets/
          *.html
          *.css
          *.js
        retention-days: 7

  deploy:
    name: 🌐 Deploy to GitHub Pages
    needs: quality-checks
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build documentation
      run: |
        npm run build
        npm run build:css
        
    - name: 📄 Setup Pages
      uses: actions/configure-pages@v4
      
    - name: 📤 Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  lighthouse:
    name: 🔍 Lighthouse Performance Audit
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: 🔍 Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://tiation.github.io/tiation-rigger-workspace-docs/
          https://tiation.github.io/tiation-rigger-workspace-docs/getting-started.html
        configPath: '.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true
        
    - name: 📊 Upload Lighthouse results
      uses: actions/upload-artifact@v3
      with:
        name: lighthouse-results
        path: '.lighthouseci/'
        retention-days: 30

  notify:
    name: 📢 Deployment Notification
    needs: [quality-checks, deploy, lighthouse]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📧 Notify deployment status
      uses: 8398a7/action-slack@v3
      if: always()
      with:
        status: custom
        custom_payload: |
          {
            "text": "🚀 Tiation Rigger Workspace Docs Deployment",
            "attachments": [
              {
                "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
                "fields": [
                  {
                    "title": "Repository",
                    "value": "${{ github.repository }}",
                    "short": true
                  },
                  {
                    "title": "Branch",
                    "value": "${{ github.ref_name }}",
                    "short": true
                  },
                  {
                    "title": "Status",
                    "value": "${{ job.status }}",
                    "short": true
                  },
                  {
                    "title": "URL",
                    "value": "https://tiation.github.io/tiation-rigger-workspace-docs/",
                    "short": true
                  }
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
