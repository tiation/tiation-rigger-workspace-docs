# 🚀 Tiation Rigger Workspace Documentation - Release Pipeline
# Enterprise-grade automated release workflow
# Includes: Semantic versioning, changelog generation, and artifact publishing

name: 🏷️ Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  # 🏗️ Build and Test
  build:
    name: 🏗️ Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🔍 Run quality checks
        run: |
          echo "🔍 Running quality checks..."
          npm run lint
          npm run format -- --check

      - name: 🏗️ Build documentation
        run: |
          echo "🏗️ Building documentation..."
          # Add build commands here
          echo "Build completed successfully!"

      - name: 📦 Package artifacts
        run: |
          echo "📦 Creating release package..."
          tar -czf tiation-rigger-workspace-docs-${{ github.ref_name }}.tar.gz \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            .

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-package
          path: tiation-rigger-workspace-docs-*.tar.gz

  # 📋 Generate Release Notes
  changelog:
    name: 📋 Generate Changelog
    runs-on: ubuntu-latest
    outputs:
      release_notes: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📋 Generate changelog
        id: changelog
        run: |
          echo "📋 Generating changelog..."
          
          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "changelog=Initial release of Tiation Rigger Workspace Documentation" >> $GITHUB_OUTPUT
          else
            # Generate changelog between tags
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD)
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGELOG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

  # 🏷️ Create Release
  release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    needs: [build, changelog]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📤 Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-package

      - name: 🏷️ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Tiation Rigger Workspace Docs ${{ github.ref_name }}"
          body: |
            ## 🚀 Tiation Rigger Workspace Documentation Release ${{ github.ref_name }}
            
            ### 🎯 What's New
            ${{ needs.changelog.outputs.release_notes }}
            
            ### 🛠️ Enterprise Features
            - ✅ Professional documentation architecture
            - 🎨 Dark neon theme with cyan gradient flares
            - 📊 Comprehensive deployment guides
            - 🔗 GitHub-centered linking (no tiation.com references)
            
            ### 📦 Downloads
            - **Documentation Package**: `tiation-rigger-workspace-docs-${{ github.ref_name }}.tar.gz`
            - **Live Site**: [GitHub Pages](https://tiation.github.io/tiation-rigger-workspace-docs)
            
            ### 🔧 Installation
            ```bash
            wget https://github.com/tiation/tiation-rigger-workspace-docs/releases/download/${{ github.ref_name }}/tiation-rigger-workspace-docs-${{ github.ref_name }}.tar.gz
            tar -xzf tiation-rigger-workspace-docs-${{ github.ref_name }}.tar.gz
            ```
            
            ---
            
            🎆 **Dark neon theme with cyan gradient flares active!**
            
            Built with enterprise-grade standards and streamlined workflows.
          files: |
            tiation-rigger-workspace-docs-*.tar.gz
          prerelease: ${{ github.event.inputs.prerelease == 'true' }}
          draft: false

  # 🔔 Notify Success
  notify:
    name: 🔔 Notify
    runs-on: ubuntu-latest
    needs: [release]
    if: always()
    steps:
      - name: 🎉 Release success notification
        if: needs.release.result == 'success'
        run: |
          echo "🎉 Release ${{ github.ref_name }} created successfully!"
          echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          echo "🌍 Live Site: https://tiation.github.io/tiation-rigger-workspace-docs"
          echo "🎆 Dark neon theme with cyan gradient flares deployed!"

      - name: ❌ Release failure notification
        if: needs.release.result != 'success'
        run: |
          echo "❌ Release ${{ github.ref_name }} failed!"
          echo "🔍 Check the workflow logs for details."
          exit 1
