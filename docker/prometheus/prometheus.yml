# Prometheus configuration for Tiation Rigger Development Environment
# Monitors all services in the unified development environment

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'tiation-rigger-dev'
    environment: 'development'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: '/metrics'

  # Documentation server
  - job_name: 'docs-server'
    static_configs:
      - targets: ['docs-server:80']
    scrape_interval: 30s
    metrics_path: '/nginx_status'
    scrape_timeout: 10s

  # API server
  - job_name: 'api-server'
    static_configs:
      - targets: ['api-server:8080']
    scrape_interval: 15s
    metrics_path: '/metrics'
    scrape_timeout: 10s

  # PostgreSQL database
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres:5432']
    scrape_interval: 30s
    metrics_path: '/metrics'
    scrape_timeout: 10s

  # Redis cache
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 30s
    metrics_path: '/metrics'
    scrape_timeout: 10s

  # Traefik load balancer
  - job_name: 'traefik'
    static_configs:
      - targets: ['traefik:8080']
    scrape_interval: 30s
    metrics_path: '/metrics'
    scrape_timeout: 10s

  # Node exporter (system metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: '/metrics'
    scrape_timeout: 10s

  # Docker metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['docker-exporter:9323']
    scrape_interval: 30s
    metrics_path: '/metrics'
    scrape_timeout: 10s

# Recording rules for performance metrics
recording_rules:
  - name: tiation.rigger.performance
    rules:
      - record: tiation:api_request_duration_seconds:mean5m
        expr: rate(api_request_duration_seconds_sum[5m]) / rate(api_request_duration_seconds_count[5m])
      
      - record: tiation:api_error_rate:mean5m
        expr: rate(api_requests_total{status=~"5.."}[5m]) / rate(api_requests_total[5m])
      
      - record: tiation:postgres_connections:current
        expr: pg_stat_database_numbackends
      
      - record: tiation:redis_memory_usage:percent
        expr: (redis_memory_used_bytes / redis_memory_max_bytes) * 100

# Alerting rules for development environment
alerting_rules:
  - name: tiation.rigger.alerts
    rules:
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.job }} is down"
          description: "{{ $labels.job }} has been down for more than 1 minute"

      - alert: HighErrorRate
        expr: tiation:api_error_rate:mean5m > 0.05
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High error rate detected"
          description: "API error rate is {{ $value }} for the last 5 minutes"

      - alert: HighMemoryUsage
        expr: tiation:redis_memory_usage:percent > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High Redis memory usage"
          description: "Redis memory usage is {{ $value }}% for the last 5 minutes"

      - alert: DatabaseConnectionsHigh
        expr: tiation:postgres_connections:current > 80
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database connections"
          description: "PostgreSQL has {{ $value }} active connections"
